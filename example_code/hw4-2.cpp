/***************************
4107056005 方郁婷 第IV次作業11/10
***************************/

//include glew and freeglut libs/dlls
#include <Windows.h>
#include <GL\glew.h>
#include <GL\freeglut.h>
#include <iostream> 

using namespace std;

#define DRAWARRAYS 1
#define DRAWELEMENTS 2
#define MULTIDRAWARRAYS 3
#define MULTIDRAWELEMENTS 4

int derefMethod = DRAWARRAYS;
static GLfloat spin = 0.0; //旋轉角度
static GLint x = 0; //static 在函數結束後依然存在，但只能在函數中使用
static GLint y = 0;
static GLint z = 0;
GLint* vertices[6];
GLfloat* colors[6];
GLfloat* vertices2[6];

float pos_z = 50, pos_x = 0;
float arm_z = 8, arm_y = -8, arm_x = 10;

static int shoulderz = -55, shouldery = 183, shoulderx = 0;
static int elbowz = -32, elbowy = 0, elbowx = 0;

static float year = 0, day = 0;

void solarDisplay(void)
{
	year = year + (float)360 / 365 / 30; //一天轉的角度分為30次轉
	if (year > 360) year = 0;
	day = day + (float)360 / 30; //一天轉的角度分為30次轉
	if (day > 360) day = 0;
	glutPostRedisplay();
}

void setupVertexAndColor() {
	static GLint logoG[] = {
		778, 274,
		791, 203,
		878, 177,
		850, 265,

		788, 212,
		767, 141,
		843, 159,
		882, 250,

		841, 159,
		917, 139,
		891, 219,
		819, 237,

		895, 214,
		906, 274,
		846, 264,
		806, 177

	};

	static GLint logoR[] = {
		842, 240,
		813, 211,
		843, 181,
		872, 211,

		843, 239,
		820, 230,
		813, 211,

		813, 211,
		823, 190,
		843, 182,

		843, 182,
		863, 189,
		872, 211,

		872, 211,
		864, 233,
		840, 240,
	};

	static GLint logoW[] = {
		779, 268,
		781, 259,
		815, 241,
		820, 248,

		804, 258,
		803, 248,
		831, 233,
		839, 232,

		824, 235,
		846, 214,
		851, 217,
		833, 236,

		834, 235,
		833, 228,
		851, 212,
		854, 213,

		847, 215,
		860, 198,
		866, 198,
		851, 217,

		857, 201,
		869, 181,
		872, 182,
		866, 198,

		869, 181,
		880, 155,
		877, 168,
		869, 188,

		871, 178,
		881, 152,
		876, 176,

		877, 173,
		882, 148,
		874, 169,
	};

	static GLint zhTitle[] = {
		//國
		31, 240,
		30, 158,
		40, 161,
		37, 239,

		37, 172,
		36, 159,
		102, 164,
		104, 175,

		39, 243,
		35, 230,
		111, 252,
		106, 256,

		108, 255,
		111, 149,
		118, 159,
		113, 254,

		104, 164,
		109, 146,
		119, 155,
		111, 161,//5

		33, 202,
		54, 215,
		50, 222,
		37, 236,

		44, 213,
		94, 229,
		90, 236,
		39, 218,

		85, 245,
		91, 230,
		104, 230,
		93, 250,

		95, 221,
		59, 174,
		78, 175,
		102, 213,

		71, 243,
		104, 179,
		108, 185,
		78, 244,//10

		61, 220,
		42, 200,
		40, 193,
		67, 222,

		40, 199,
		41, 195,
		73, 211,
		73, 216,

		80, 223,
		43, 187,
		44, 179,
		84, 219,

		44, 188,
		44, 181,
		84, 198,
		84, 204,//14

		//立
		185, 248,
		185, 242,
		196, 228,
		211, 229,//15

		162, 221,
		160, 210,
		225, 224,
		224, 232,

		201, 221,
		175, 201,
		175, 189,
		202, 219,

		177, 190,
		223, 213,
		218, 215,
		177, 200,

		219, 214,
		186, 173,
		196, 172,
		227, 211,

		159, 173,
		168, 164,
		243, 169,
		241, 179,//20

		//中
		263, 235,
		270, 197,
		278, 196,
		272, 233,

		270, 235,
		283, 224,
		339, 239,
		344, 241,

		295, 209,
		293, 198,
		347, 234,
		341, 242,

		295, 208,
		292, 198,
		331, 205,
		334, 211,

		312, 257,
		309, 118,
		318, 126,
		318, 255,//25

		//興
		388, 244,
		389, 195,
		396, 196,
		395, 243,

		402, 199,
		406, 201,
		406, 242,
		402, 241,

		398, 245,
		402, 241,
		406, 241,
		402, 246,

		412, 249,
		413, 202,
		420, 199,
		417, 248,

		414, 247,
		431, 251,
		438, 251,
		434, 257,//30

		433, 256,
		425, 195,
		431, 199,
		440, 254,

		439, 247,
		447, 244,
		458, 255,
		453, 255,

		454, 254,
		444, 201,
		447, 207,
		460, 252,

		351, 190,
		356, 176,
		478, 204,
		474, 213,

		373, 176,
		386, 160,
		409, 173,
		429, 184,//35

		449, 188,
		472, 157,
		474, 170,
		471, 173,

		448, 219,
		452, 223,
		433, 238,
		434, 232,

		445, 228,
		433, 221,
		449, 219,
		454, 223,

		436, 221,
		439, 210,
		443, 198,
		448, 205,

		429, 238,
		413, 237,
		413, 229,
		430, 233,//40

		427, 231,
		415, 214,
		416, 205,
		428, 227,

		430, 223,
		417, 213,
		420, 212,
		431, 218,

		//大
		508, 211,
		511, 203,
		571, 222,
		574, 228,

		557, 252,
		522, 177,
		538, 177,
		559, 250,

		559, 197,
		585, 172,
		590, 180,
		587, 187,//45


		//學
		622, 252,
		622, 201,
		629, 202,
		630, 247,

		636, 259,
		626, 245,
		628, 245,
		638, 256,

		665, 215,
		674, 217,
		680, 250,
		676, 253,

		682, 257,
		663, 249,
		672, 247,
		682, 253,

		622, 243,
		622, 232,
		637, 238,
		637, 245,//50

		626, 221,
		626, 215,
		639, 221,
		643, 234,

		657, 260,
		644, 233,
		651, 241,
		658, 253,

		641, 243,
		643, 241,
		661, 240,
		662, 246,

		641, 230,
		653, 214,
		655, 223,
		650, 226,

		655, 236,
		642, 208,
		649, 207,
		658, 233,//55

		614, 200,
		604, 184,
		607, 176,
		619, 199,

		615, 201,
		614, 194,
		689, 218,
		691, 222,

		690, 220,
		679, 203,
		698, 208,
		700, 217,

		633, 180,
		635, 177,
		683, 185,
		683, 189,

		655, 195,
		661, 163,
		662, 147,
		667, 190,//60

		663, 162,
		640, 136,
		636, 127,
		665, 151,

		642, 137,
		615, 126,
		623, 124,
		637, 127,

		661, 206,
		648, 195,
		661, 192,
		665, 205,

		678, 243,
		658, 239,
		662, 225,
		671, 223,

		648, 223,
		658, 215,
		663, 216,
		656, 222,//65
	};

	static GLint enTitle[] = {
		//N
		38, 63,
		38, 24,
		43, 61,

		40, 62,
		40, 53,
		67, 23,

		63, 25,
		68, 23,
		67, 64,

		//a
		94, 54,
		93, 50,
		100, 47,

		94, 53,
		80, 45,
		93, 48,//5

		98, 48,
		103, 22,
		104, 46,

		83, 33,
		101, 38,
		103, 45,

		83, 34,
		89, 22,
		89, 27,

		89, 27,
		90, 22,
		101, 29,

		//t
		113, 53,
		114, 48,
		126, 50,//10

		118, 60,
		120, 22,
		121, 59,

		119, 27,
		126, 20,
		127, 29,

		//i
		133, 65,
		137, 56,
		139, 67,

		133, 50,
		135, 21,
		139, 50,

		//o
		161, 53,
		150, 38,
		161, 47,//15

		150, 40,
		160, 20,
		159, 28,

		160, 27,
		158, 22,
		173, 39,

		172, 38,
		160, 53,
		162, 49,

		//n
		185, 53,
		186, 23,
		189, 54,

		187, 49,
		187, 42,
		199, 52,//20

		199, 52,
		201, 24,
		207, 23,

		//a
		232, 54,
		216, 43,
		234, 50,

		232, 55,
		233, 50,
		240, 47,

		240, 47,
		240, 22,
		248, 25,

		221, 39,
		225, 32,
		243, 40,//25

		220, 38,
		227, 23,
		223, 36,

		224, 25,
		241, 27,
		240, 34,

		//l
		253, 62,
		255, 24,
		258, 61,

		//c
		299, 65,
		299, 59,
		313, 53,

		283, 47,
		301, 60,
		300, 65,//30

		284, 45,
		298, 22,
		298, 28,

		298, 27,
		298, 22,
		316, 35,

		//h
		327, 63,
		328, 23,
		331, 63,

		327, 43,
		340, 48,
		340, 54,

		340, 54,
		340, 47,
		349, 22,//35

		//u
		359, 53,
		372, 23,
		366, 53,

		372, 24,
		383, 28,
		384, 38,

		379, 51,
		386, 24,
		386, 52,

		//n

		395, 52,
		397, 22,
		400, 55,

		396, 42,
		411, 48,
		411, 56,//40

		411, 54,
		411, 47,
		418, 21,

		//g
		451, 54,
		448, 18,
		452, 18,

		453, 20,
		440, 17,
		442, 10,

		430, 21,
		442, 8,
		442, 16,

		452, 45,
		438, 54,
		438, 47,//45

		439, 54,
		430, 37,
		441, 50,

		430, 40,
		439, 21,
		439, 30,

		440, 29,
		439, 25,
		452, 34,

		//H
		478, 63,
		481, 19,
		485, 65,

		481, 48,
		480, 41,
		508, 40,//50


		505, 63,
		506, 17,
		511, 64,

		//s
		532, 55,
		533, 50,
		541, 45,

		532, 56,
		522, 44,
		532, 49,

		523, 45,
		538, 34,
		543, 34,

		541, 34,
		534, 27,
		544, 29,//55

		533, 26,
		525, 33,
		521, 30,

		//i
		553, 65,
		556, 59,
		560, 64,

		552, 49,
		555, 23,
		560, 52,

		//n
		568, 49,
		570, 22,
		574, 52,

		574, 49,
		574, 43,
		585, 53,//60

		585, 53,
		586, 22,
		593, 22,

		//g
		626, 53,
		622, 17,
		628, 17,

		625, 47,
		614, 54,
		614, 47,

		614, 54,
		602, 35,
		617, 46,

		604, 38,
		615, 21,
		615, 31,//65

		615, 31,
		616, 23,
		626, 31,

		621, 19,
		613, 12,
		625, 18,

		614, 12,
		607, 22,
		602, 19,

		//U
		653, 63,
		655, 26,
		660, 30,

		656, 33,
		657, 27,
		679, 26,//70

		677, 28,
		684, 63,
		676, 63,

		//n
		694, 52,
		698, 24,
		701, 53,

		698, 42,
		711, 49,
		711, 55,

		711, 55,
		710, 47,
		720, 22,

		//i
		729, 64,
		735, 56,
		738, 64,//75

		729, 51,
		734, 25,
		737, 51,

		//v
		742, 52,
		755, 27,
		755, 34,

		755, 33,
		757, 25,
		769, 52,

		//e
		787, 51,
		775, 41,
		789, 48,

		789, 52,
		788, 47,
		801, 39,//80

		801, 41,
		775, 44,
		777, 38,

		775, 39,
		788, 21,
		788, 29,

		787, 29,
		787, 21,
		799, 31,

		//r

		811, 52,
		812, 21,
		817, 52,

		815, 47,
		815, 40,
		825, 51,//85

		//s
		843, 54,
		843, 47,
		852, 48,

		844, 53,
		833, 43,
		843, 48,

		834, 46,
		851, 29,
		855, 37,

		855, 34,
		843, 28,
		843, 21,

		842, 29,
		833, 33,
		843, 23,//90

		//i
		864, 61,
		868, 57,
		871, 65,

		864, 50,
		868, 23,
		870, 49,

		//t
		876, 55,
		877, 49,
		891, 51,

		883, 61,
		883, 28,
		887, 26,

		883, 29,
		892, 21,
		891, 28,//95

		//y
		899, 51,
		908, 26,
		913, 31,

		922, 52,
		901, 13,
		910, 16,
	};

	static GLfloat logoG_color[] = {
		0.5430736719899208, 0.9274639818518992, 0.1432563395868485,
		0.4647925165474421, 0.8069523430603059, 0.10196907363526349,
		0.4061369517289652, 0.8883083497606744, 0.17105726789666342,
		0.43564138971530886, 0.9705328730400631, 0.17552784999573445,
		0.45911723475293226, 0.9161976312236322, 0.09987225270720773,
		0.5488947826465023, 0.8167083652598507, 0.016371194577594395,
		0.5670296692146235, 0.9182659659457103, 0.061727078199233315,
		0.40743972421719793, 0.9306429357688054, 0.09539558238415652,
		0.4676957095905528, 0.813232686921935, 0.15164890959885413,
		0.5210040026794286, 0.9566188709215803, 0.12904995007169281,
		0.40337874685143654, 0.8266314873046657, 0.1770416281309644,
		0.41312697252786656, 0.9995257345338651, 0.00480365505007343,
		0.5418989154103077, 0.9568652081835368, 0.04701196950051448,
		0.4461253072657812, 0.9013913609277744, 0.004670384781021397,
		0.5805262517045364, 0.8997837730603153, 0.114772775508121,
		0.47874782916019304, 0.8321368802257506, 0.1706478428069232,
		0.48034910338229864, 0.8752098006389724, 0.04134644788559068,
	};

	static GLfloat logoR_color[] = {
		0.7890315189876616, 0.009970011531299616, 0.26491040288668516,
		0.9025292054454208, 0.10904261603064426, 0.14515935854780362,
		0.9950455037967523, 0.23052730291325235, 0.21103971393352652,
		0.8231476518562643, 0.013844105719436705, 0.2470878336298668,
		0.8459394527135435, 0.254102603674226, 0.12843507261764234,
		0.9020900534343211, 0.012339819621426428, 0.08921022802003604,
		0.7775020920591471, 0.2761729441865073, 0.22532709044801497,
		0.7574603962065255, 0.28100463299137735, 0.1695491972706041,
		0.7265007806505606, 0.050561784960070175, 0.25699105658644794,
		0.9718006695377069, 0.040885050100746244, 0.06979404935839353,
		0.9873621394390097, 0.1040209230903047, 0.29323162539129427,
		0.732357454402324, 0.11509178071585657, 0.09806962034991125,
		0.8026913458190501, 0.059264481887290964, 0.21123843404370315,
		0.8384636714810285, 0.22512098979377695, 0.2228162320135171,
		0.8536983080980872, 0.05820397427824152, 0.07684065057675712,
		0.7694190953316262, 0.13280854876310147, 0.06487566221784508,
		0.8603807442707954, 0.13064873907188615, 0.14736352837134592,
	};

	static GLfloat logoW_color[] = {
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
		1, 1, 1,
	};

	static GLfloat zhTitle_color[] = { //260
		0.23157535095579332, 0.6813185491672697, 0.8663333783318967,
		0.023332530592392643, 0.5812488694666316, 0.9283422108865839,
		0.1647192613364724, 0.7291831674053306, 0.8334918052993602,
		0.006889425924056215, 0.47038790929946805, 0.8482013185927227,
		0.22747999239910954, 0.453125489008581, 0.8332325824912908,
		0.07933439276729755, 0.7786051118648316, 0.9946715552371881,
		0.18535529897545222, 0.6169232914298582, 0.8462821382887127,
		0.18788967687131258, 0.520453388842015, 0.9220567866449627,
		0.09624541871591052, 0.6540292554095959, 0.9433979835810353,
		0.39365120715547325, 0.6091879918887665, 0.8879029044294777,
		0.19087649822024946, 0.5412774843177425, 0.8938025061659701,
		0.3285712117832398, 0.7597943122733999, 0.9147666217979302,
		0.3080095400254286, 0.4698952483724956, 0.8836643411783478,
		0.2689635862967092, 0.5928171745017143, 0.817682065987764,
		0.05712624317157609, 0.643302651624294, 0.955521775314317,
		0.16127969157611416, 0.5502202377660848, 0.9330891910959603,
		0.24876750331979022, 0.7673182751334392, 0.8102224467240013,
		0.06296477064326247, 0.6298213426002258, 0.9799652764665118,
		0.17154199568723338, 0.45232760442565256, 0.9673819207082562,
		0.22930741834832344, 0.5917726958532664, 0.9389283885074912,
		0.15580155801319992, 0.6446751496094432, 0.9071833346396524,
		0.1113673965157286, 0.7612100869251387, 0.9437429920818647,
		0.19251595613812636, 0.4763525472429766, 0.9554920976174877,
		0.33835706488449846, 0.53331317324218, 0.8592821089636052,
		0.11095607177925665, 0.766926868563538, 0.938770091072698,
		0.32754695179026083, 0.614532878353948, 0.8283455033245336,
		0.13038240302764656, 0.6008750551996077, 0.8809092100023825,
		0.06818808765935658, 0.6931730930128426, 0.9087775374551953,
		0.31857088686265933, 0.47729854264379457, 0.9043422782120945,
		0.061984182632128175, 0.6066442001658425, 0.9545914475992339,
		0.28196771239237556, 0.4233217973156185, 0.8276740957179769,
		0.20938506335411133, 0.6825497921212254, 0.8731999229640119,
		0.3422759741777925, 0.6063873310292539, 0.9998370488730695,
		0.31230393821431424, 0.7370529418533577, 0.8921970557032253,
		0.3516339833385541, 0.5552681316585367, 0.8000511082261191,
		0.1893709898741941, 0.419409825645195, 0.8419517421230237,
		0.13842432770922317, 0.740077708382258, 0.8972247283682185,
		0.05368055564500116, 0.5769433052109771, 0.8292291972421505,
		0.23694088457802598, 0.49761675758974305, 0.8928330838933658,
		0.13071870597311866, 0.5777825183027516, 0.9970433991192487,
		0.025159659804883508, 0.7640276232482403, 0.8799589126696712,
		0.28270908484817797, 0.7852218140945154, 0.8213474015353371,
		0.27489437178561954, 0.6422510904039254, 0.9083983732279268,
		0.34204689732042315, 0.434249596008899, 0.9855445312411811,
		0.06961344991691436, 0.7479576276724242, 0.8081822556369791,
		0.33317492599227316, 0.7307659465230805, 0.93817043072951,
		0.11098509841392508, 0.501980425216334, 0.8335058854893618,
		0.32535202899703786, 0.6752538771408629, 0.868648455164509,
		0.19231828258751016, 0.5165104090058845, 0.9199494685986633,
		0.14333504737787855, 0.507419352202347, 0.8330414685080852,
		0.02609035282635355, 0.4764584190022419, 0.8722761222839035,
		0.28449394163800695, 0.49178809003188895, 0.9947448089944821,
		0.20101216527818733, 0.6945271972790095, 0.8976497852113963,
		0.14147068946608363, 0.7854818760220014, 0.9225108125316183,
		0.2532309039011051, 0.7619478925824864, 0.9019764863821972,
		0.3326647634260773, 0.5010319726728693, 0.9148459726007686,
		0.33459870748739895, 0.6637614764067438, 0.9981108384292934,
		0.2958676368779236, 0.6120698312857932, 0.9919048878933,
		0.2955256892036883, 0.5389700935593618, 0.8794569982313296,
		0.1459771038003634, 0.7744767808803834, 0.9510281096449464,
		0.15965080811260612, 0.48164750783885957, 0.9127298325644689,
		0.3797557643460223, 0.5047459035167693, 0.8034909537619335,
		0.39009966886341185, 0.6420410001592093, 0.9502329564460206,
		0.004665890905938897, 0.7601359841756213, 0.8475904410119658,
		0.277976510758826, 0.45839341978387943, 0.8379353717814453,
		0.022456720740459526, 0.5109476028442053, 0.9418463595601138,
		0.3212271449816216, 0.4041735601078788, 0.9028285038422406,
		0.38751759774182776, 0.5205752423559228, 0.8256584808808252,
		0.2722435231529014, 0.751857155642845, 0.8643259405412443,
		0.1394556512053356, 0.4004149149122072, 0.8312794736296565,
		0.3395326549996231, 0.4203861875974671, 0.8130557903081616,
		0.22840497832532855, 0.7260313214171394, 0.9590830441317816,
		0.23360009200495738, 0.7273791244663175, 0.8689473420990702,
		0.25891797561820223, 0.6276217064296694, 0.8994789215665152,
		0.2363905347296579, 0.7707711729901656, 0.9934857072120451,
		0.22944276983032014, 0.40599735464084585, 0.940019086780504,
		0.030772544221878296, 0.7595157620444433, 0.9625670615206758,
		0.14317282897886804, 0.48592234051625716, 0.8840098268058576,
		0.2087442210885099, 0.42043484151334476, 0.9709799066984148,
		0.27493330250625897, 0.628160419674824, 0.9674669425711422,
		0.21526283902738275, 0.511961206846713, 0.947695587451447,
		0.2895402430796913, 0.4213766685333009, 0.8252061316689414,
		0.1475096716186338, 0.4792665369309244, 0.8246956970026711,
		0.14771727023405434, 0.6779462118476471, 0.8085400596316179,
		0.34389480652615934, 0.769811001557458, 0.9623521185212013,
		0.3630296008865989, 0.6241487456402731, 0.9043042810021141,
		0.10518925269400414, 0.796770239020711, 0.9249433036900265,
		0.3786661597145442, 0.7642542988786265, 0.9660211630884832,
		0.1827248552823959, 0.6382339290331049, 0.8970223611933974,
		0.21248724036676508, 0.7584666459376546, 0.8501953600872826,
		0.3050447892571881, 0.731151011832878, 0.9170863231884536,
		0.26260735090477855, 0.529455207495994, 0.8271084186071106,
		0.3828001620984005, 0.44109090065866674, 0.9021242986303573,
		0.14634725387218625, 0.5170335981293206, 0.9686623975717022,
		0.06868848384608905, 0.7432459813497465, 0.941821172140593,
		0.3819849473389254, 0.6601335496714352, 0.8632155521036635,
		0.3547255121972792, 0.4985791532499853, 0.8425533313953946,
		0.29505496587740615, 0.6368690340538604, 0.8407903471602318,
		0.06488780863008801, 0.6819843118460667, 0.8464996390858514,
		0.23137839128636487, 0.5332601698988781, 0.9178712103515347,
		0.01127162301745468, 0.4217850206076439, 0.8520756110660015,
		0.06296107273026604, 0.4324691767329363, 0.9900193204920713,
		0.2484917680033461, 0.40037314084596104, 0.9090103011955297,
		0.03493820346357546, 0.623527855392618, 0.9911808591208024,
		0.2885843757004434, 0.49711348189657645, 0.809496039695688,
		0.05885285727449041, 0.5781307246101736, 0.9020331660799088,
		0.3829153757881669, 0.5828578560048753, 0.8869786978935771,
		0.25920583668328584, 0.6314952520225124, 0.9593459319970457,
		0.2156504978142898, 0.6268433652689764, 0.942880722211304,
		0.247742285539978, 0.7050028640476739, 0.9374243526920255,
		0.223856975583172, 0.7897646068111049, 0.8472467024584105,
		0.22255059416788386, 0.4904378658262701, 0.9866478519104577,
		0.3975124226007822, 0.7089175999876454, 0.8333823841966022,
		0.3616840842057906, 0.7821994631047207, 0.8167907414579006,
		0.35110315470000186, 0.7384502856342466, 0.8224339694943341,
		0.12700487369543417, 0.7975622783849271, 0.8071860482510547,
		0.36284971185631537, 0.6185023195025028, 0.9617566600303409,
		0.3861366887229208, 0.6723557719226653, 0.9573383908104023,
		0.3388376654571821, 0.6272456274979004, 0.9979714205314615,
		0.15079571104939515, 0.7036910797480744, 0.9646634747222808,
		0.11325014433827407, 0.5009081307198439, 0.984628669661729,
		0.3478643229319347, 0.5237399507146235, 0.9610420129030585,
		0.270156034311624, 0.6529564028730186, 0.8855595270549225,
		0.16939404641070463, 0.7779052593841641, 0.9142595603550819,
		0.3034986714704643, 0.7953421705478014, 0.8604037735350922,
		0.33905711538427363, 0.5960317049055246, 0.8119755435147348,
		0.0184098710778716, 0.4723703341191649, 0.9097787142182275,
		0.08857587888425084, 0.4244711418183814, 0.9004431777076543,
		0.3246159865128177, 0.6521088677823568, 0.8022483662507317,
		0.3917265851012807, 0.6810855633319441, 0.805043841815994,
		0.313394025838434, 0.6741116790052157, 0.985977923899277,
		0.1709828197131038, 0.7794624602079695, 0.9291914272097022,
		0.2639511334897866, 0.6287463788449748, 0.8384961722047182,
		0.3796687919359035, 0.4001983624972867, 0.9621090898646563,
		0.24406357100576923, 0.44395261694727817, 0.8532526961604742,
		0.2298912665607551, 0.6013674179501561, 0.9174189382394403,
		0.021789425243184682, 0.6803130431284994, 0.941736573554711,
		0.04214398183439721, 0.46166687272417817, 0.9493791062490264,
		0.16491091231834437, 0.5380623693965788, 0.9403849367328008,
		0.17150407063265966, 0.7461686012457814, 0.8877353395341264,
		0.12366102828337851, 0.6137786274111989, 0.8606451969112556,
		0.2722357984470436, 0.6362633908642474, 0.8496873102789559,
		0.26771223079980483, 0.7520171131058554, 0.9903048138326856,
		0.3002322767785392, 0.5520106064392578, 0.9130901852965504,
		0.09467341182121257, 0.74564072316987, 0.8809133186267059,
		0.2538319464310739, 0.7098294197095012, 0.9048605233626481,
		0.08919946611865509, 0.6213342126729434, 0.8963179458695006,
		0.22030309491121197, 0.7179903237851017, 0.8977777588162774,
		0.13444787594472393, 0.43529165060816966, 0.9245023805306615,
		0.09112427046874037, 0.742320295872494, 0.8845386255482905,
		0.3160768076142036, 0.6987905170207018, 0.8485982203307257,
		0.2252955721944385, 0.46781145442506694, 0.9346070419255594,
		0.0035549871142473324, 0.42456949133232236, 0.9195005318854981,
		0.17481166044631358, 0.521260724108487, 0.9379901964342656,
		0.30079871580501794, 0.5783842048198262, 0.9114262836663923,
		0.23728968927726088, 0.4623817304966298, 0.8569171061229863,
		0.17416147104526433, 0.5123605300035876, 0.8831043120065013,
		0.10726159260462703, 0.5412640570085417, 0.8447571863634484,
		0.09569643172905101, 0.7450274734230076, 0.972443304658487,
		0.29930449522430275, 0.49327981374766317, 0.9520187460881905,
		0.09718733171731114, 0.4119256962267042, 0.817699634065405,
		0.2359994334984577, 0.7934435038474814, 0.8612704651092014,
		0.39262045749407776, 0.6424332515901487, 0.9715746199584715,
		0.06513668305567477, 0.6363858473093111, 0.9745348591208147,
		0.3128963109202798, 0.4719615056075585, 0.8514318346777288,
		0.3998104766361361, 0.7207009489831511, 0.9239255876390903,
		0.15291563597225358, 0.45134615619826834, 0.8432540730662167,
		0.3228018860408273, 0.5317580871943357, 0.8045002524420408,
		0.06716139012068005, 0.4191891408444432, 0.8712642777796535,
		0.13716426145365102, 0.7190568631837955, 0.9142119115650621,
		0.1682402555932399, 0.7678258911997985, 0.8449403291122176,
		0.2813993760402628, 0.4378243586822579, 0.876560768542775,
		0.28503320995214265, 0.453574372523133, 0.9366876628365848,
		0.2744861950379395, 0.6418822876837057, 0.951065630105746,
		0.3241970548004744, 0.5575196962970775, 0.9673724137239638,
		0.3126455754028528, 0.6614720053648593, 0.8345995053451414,
		0.17775589023447858, 0.74577647091328, 0.9548242982527746,
		0.3250204134402192, 0.5770387990364699, 0.8860222196483951,
		0.2685178824467402, 0.4408727986446896, 0.8451004764129557,
		0.15448223294054128, 0.4094815309731433, 0.9630740703279084,
		0.36590391821260637, 0.7797368928771764, 0.8447487948665919,
		0.049682713005406234, 0.5300019471775996, 0.9411528255002677,
		0.06433853686221327, 0.4514327549396008, 0.9424583132846437,
		0.04329072547698805, 0.4300336854999219, 0.9824353651899045,
		0.2888363285650332, 0.695209488576022, 0.8346535249607333,
		0.22477958864324, 0.7436492616144438, 0.8848753523353339,
		0.286419994143662, 0.766369658324082, 0.8416450825946242,
		0.26466519830609575, 0.4288761274828803, 0.8696755890694527,
		0.33578186334494453, 0.5498339835201368, 0.826009350591168,
		0.010063821175148747, 0.6888067022056015, 0.8935016215203647,
		0.22739790804333537, 0.6852508862599147, 0.8105233578635352,
		0.17582894624124337, 0.4751442933364132, 0.830304296352343,
		0.03656987856757841, 0.7315627819683952, 0.9366824571544358,
		0.35322443930706887, 0.6557955927248267, 0.9249572047882435,
		0.3145763471432367, 0.6795687419464345, 0.8903755810852861,
		0.198466613270449, 0.7475941038774774, 0.9940641011185174,
		0.3950396450741136, 0.7717065472915446, 0.8764773627017004,
		0.36861502323570533, 0.48201654165600916, 0.8608840491399723,
		0.1826066065490548, 0.415684746334073, 0.9101472704910331,
		0.16493083259766342, 0.45826677144078376, 0.9978313127703367,
		0.17183570307216234, 0.773858234256892, 0.8625984093374325,
		0.2047894955565035, 0.7616270091093222, 0.9830856656478943,
		0.09648058506067035, 0.6916058705901718, 0.9805102575509509,
		0.34987934500871376, 0.5083578302689683, 0.9273612028474277,
		0.1918098537717577, 0.6344167982434793, 0.9993204566571166,
		0.03351100649725436, 0.7329884586464175, 0.8302950863676101,
		0.13755241062596776, 0.6983206683768356, 0.9719184284986413,
		0.2556922976956159, 0.6948663601952698, 0.9542482871015099,
		0.20166996841033616, 0.7956657286472003, 0.9860491333407619,
		0.028427348044145973, 0.7359004527127351, 0.9898071685907536,
		0.21185001329697442, 0.521366380133898, 0.9091738585524741,
		0.13688450189512388, 0.6300152348030802, 0.9994723622557982,
		0.24694165096502307, 0.5875271539850562, 0.8750512095797279,
		0.20298007370251225, 0.5784278733055392, 0.8710582847119752,
		0.011380744802699683, 0.6706552681904365, 0.8496018703728729,
		0.08606240157573192, 0.6425498658308302, 0.9690371919978549,
		0.2763604441324692, 0.5671724710309053, 0.9158758310140656,
		0.393235646918611, 0.6148647089808041, 0.9916618016953249,
		0.23483430696703392, 0.694866084699234, 0.8485990461063232,
		0.23592357683161685, 0.7669605683511689, 0.9520583760197513,
		0.18430799560861877, 0.48185712107493744, 0.889959334634929,
		0.28933339755777504, 0.4525103868701182, 0.8458481204045667,
		0.3805987344958812, 0.7725359776025179, 0.9228027109503514,
		0.1115503673121892, 0.6634513482692006, 0.8213804173434972,
		0.02818593935739551, 0.72068651639856, 0.949442028087479,
		0.29563109651621805, 0.7077207411325933, 0.936579266191,
		0.3265595222638622, 0.5836279113551586, 0.9829116986461928,
		0.320619669173561, 0.43825306853365054, 0.9948720041837678,
		0.04467056753567764, 0.5824916874610956, 0.9466875571771948,
		0.37171053046448216, 0.717776533744339, 0.8545885647911506,
		0.37869355625087886, 0.6430592176911274, 0.840501031498702,
		0.023416276145399054, 0.5121972712534616, 0.8839602639989067,
		0.38161624007542316, 0.6526747661087866, 0.9155586414432368,
		0.15127052029678456, 0.6880812326252345, 0.9792127411324977,
		0.38438752476825766, 0.46604799858485824, 0.9259839450207484,
		0.2915026942290612, 0.4482845372674327, 0.978069024461425,
		0.3851391748874954, 0.7836842993157075, 0.8800700682081983,
		0.11663399258099948, 0.5231379564803362, 0.8175237422182454,
		0.26347688285891036, 0.44460222492261314, 0.8514537756599841,
		0.26682588992565137, 0.5095437745324108, 0.8465286581825708,
		0.06258006727670354, 0.4954318745121109, 0.9388566957142388,
		0.3134081981627772, 0.6111129604686132, 0.9674124060576867,
		0.23225789579715903, 0.5325276229628751, 0.9930364313331757,
		0.05639159410548755, 0.7769371605546418, 0.8286458860080018,
		0.14515331004794504, 0.7581251274472809, 0.8492308043944926,
		0.1714950091641567, 0.7983572828301851, 0.8909176101419554,
		0.10157947173226592, 0.6679250444924557, 0.990685482234166,
		0.13830896395641898, 0.4132656553070433, 0.8274801194212725,
		0.28082280979011437, 0.6145018977515022, 0.888007018258135,
		0.14622123550304528, 0.49499865092570366, 0.9074532412757421,
		0.2919960738847821, 0.5804278334273805, 0.8067240276736645,
		0.12255527710378562, 0.503125116952607, 0.8733745316653763,
		0.029879296618076624, 0.7626487408674363, 0.8734092121860898,
		0.14873951513173647, 0.682145984605228, 0.9181732425613549,
		0.28001829749886736, 0.479455762942062, 0.987431583519859,
		0.2504485421888751, 0.4232611373374036, 0.9087752001909304,
		0.16931857245352752, 0.7551816309739224, 0.9618573744455333,
		0.225537629068436, 0.48154912125531896, 0.8690826656250978,
		0.37831803334084874, 0.6625272966665011, 0.9504752508504497,
		0.28366385485222884, 0.4395792516187544, 0.865439530251435,
		0.15944364526394247, 0.43372730974435986, 0.9838209251717556,
		0.19627479079604623, 0.5379550084559606, 0.9266498299795977,
		0.11843259223934784, 0.7302427732719333, 0.8886989861994627,
		0.3888098288652371, 0.6906261154799498, 0.9898224390785301,
		0.17762807914737216, 0.7160705731179505, 0.906676137511928,
		0.031059136692543454, 0.7109670789464458, 0.8153987204849317,
		0.1771275880483495, 0.4640574923807351, 0.8586917425268812,
		0.1822176549692459, 0.6351755439952695, 0.9482705485796825,
		0.09010350378168064, 0.646493013713803, 0.9698809930003558,
		0.15112703980100817, 0.7124228236873308, 0.808603694613419,
		0.03732125093644778, 0.514556374985385, 0.9367477790420259,
		0.3950918829633257, 0.6542113526983333, 0.9014108912530565,
		0.30860484726386483, 0.48892608387138703, 0.9852420068878095,
		0.0046038271993800615, 0.6160046213020081, 0.8037599179801597,
		0.07390948079834639, 0.6317431752782544, 0.909811341633646,
		0.29236801179013144, 0.4761725005993379, 0.9524948398520946,
		0.2108551819939447, 0.4586176923383997, 0.9977613124998961,
		0.022474678920541183, 0.5685201456213431, 0.9515160224041668,
		0.3068584934934762, 0.5801300119532404, 0.8081080484922927,
		0.3762230533716613, 0.76455055384917, 0.9750295668269613,
		0.14928484159616215, 0.7231861745223881, 0.9259326589041786,
		0.11060274296768516, 0.4011003059216127, 0.8872339185230947,
		0.16407524655074895, 0.6900127912634464, 0.9821963890558258,
		0.19386257314524458, 0.754166208462258, 0.9721816638107827,
		0.04439096987336036, 0.5783109080442521, 0.8811429152877879,
		0.11906910164702099, 0.46813792468306015, 0.9516472422512107,
		0.29924952885429157, 0.4493698637954319, 0.8285071014280962,
		0.07739840834202734, 0.4753086074772924, 0.9876031632989667,
		0.31896512113697606, 0.6850948443263609, 0.9441179121522315,
		0.19014607871077596, 0.6015524883479344, 0.8328580589967987,
		0.24118304533072285, 0.5505007643712391, 0.9439390658492206,
	};

	static GLfloat enTitle_color[] = {//291
		0.8437746583357373, 0.6398356622004743, 0.8249657214232619,
		0.9136173055236234, 0.5261025997940756, 0.6745936465759156,
		0.8177690681480406, 0.7930470193687964, 0.8248113527248411,
		0.8518327420500189, 0.7069775921363955, 0.6196244672399229,
		0.8132786627770932, 0.7151182810875794, 0.6907535468322255,
		0.9792806054545476, 0.4754357335088333, 0.6801707572422824,
		0.8501209141050625, 0.4044919990051356, 0.7876559231715634,
		0.8118590602963021, 0.7581160863830325, 0.6338002399436443,
		0.9492245055097159, 0.5327562491597139, 0.7454924068835436,
		0.8571410951212346, 0.7842990409370776, 0.8459680587777336,
		0.8662839498579729, 0.4171868999011706, 0.8961873527742663,
		0.8757277987225803, 0.6248167839345697, 0.8964401543397251,
		0.8946124242080686, 0.4710454120326966, 0.6302061392515657,
		0.9712063930519508, 0.7534524867585441, 0.7001955261467262,
		0.823738709543215, 0.6540446133430133, 0.7931876132471859,
		0.9423154256583205, 0.7800911921082417, 0.8114022745039803,
		0.8482324679477905, 0.5170096667572942, 0.7368740931128316,
		0.866573102868601, 0.7553672965482165, 0.6074845975151911,
		0.9389181749719662, 0.46969516314518295, 0.6550199213175724,
		0.9338962812697393, 0.7658634024011561, 0.8232928208448949,
		0.8949302466926564, 0.4453202195598586, 0.8104762361373836,
		0.8492216606567051, 0.5269004396711787, 0.7298562450330762,
		0.8280889600074856, 0.4163436941046121, 0.7494937351625282,
		0.9862905686711632, 0.6833139202467998, 0.6900237299533873,
		0.9107363622661591, 0.42752028742744896, 0.8053549733031979,
		0.9790684759126356, 0.7982606940942448, 0.6844108361740896,
		0.8370029240788643, 0.5474872837716781, 0.6807308817684582,
		0.9150646258190743, 0.6247435727007966, 0.8035845862972384,
		0.9130800496265314, 0.6552883401125162, 0.6692628894701684,
		0.9218278105858846, 0.6778876606138, 0.7682310890322992,
		0.9959083496896353, 0.6645882661806792, 0.8172422912238891,
		0.9274800122341489, 0.49736349464801377, 0.7860035660575354,
		0.9838203490727654, 0.7246059312401794, 0.7480986363264871,
		0.9670462843603295, 0.7666517881232571, 0.7217824057348482,
		0.9311777077195974, 0.5851582587155517, 0.653209942860293,
		0.8795232153928303, 0.4039402597458729, 0.8633974267973594,
		0.864305635067689, 0.41192894403119945, 0.7814387286747221,
		0.8642980920685892, 0.7296068904411228, 0.683016409679314,
		0.9076398842141123, 0.5529386513200556, 0.6960847408912304,
		0.9118270026259122, 0.7094335709602458, 0.6869671144802563,
		0.918032723466525, 0.6079063551198205, 0.8460807606485075,
		0.9557172388953018, 0.6899493880181404, 0.848023110872684,
		0.9456080017331574, 0.6889771202757009, 0.7873037960195953,
		0.940707566633186, 0.6169990418269808, 0.8983139253062695,
		0.942298016423303, 0.47205694054452113, 0.7726607047799564,
		0.8904986951096131, 0.47502510622569405, 0.8416216524323038,
		0.8867732643709667, 0.5091839433351739, 0.8684356677059744,
		0.9212989465786521, 0.7494285429469556, 0.7515574812931428,
		0.8225673021468703, 0.6876816460461601, 0.6443898880871742,
		0.9131919055960034, 0.7528822567620077, 0.7716291530610676,
		0.8630704453049431, 0.5888918426248376, 0.844935454952447,
		0.8815735719147421, 0.41968809230770787, 0.644605134416769,
		0.8948253917340642, 0.765786676237135, 0.8600925886015951,
		0.8489756604739305, 0.7652194145515344, 0.6582181505918134,
		0.9860962620454892, 0.6121642336473945, 0.8699373357187884,
		0.8204290199865233, 0.4952204058577316, 0.7719862641577198,
		0.8356492082629393, 0.4634142448057994, 0.7929931241989948,
		0.8541551897943739, 0.6985967261510324, 0.7740433858091766,
		0.8901145585018702, 0.48407717730580563, 0.7795666342012788,
		0.8505625347868937, 0.5973424055570434, 0.7222550904340921,
		0.9245619194783598, 0.49107709275646494, 0.8176421905454117,
		0.9087018581500568, 0.6923578497942453, 0.7580599605733135,
		0.8080844018281069, 0.6424267802062248, 0.6642340502079418,
		0.9135775221290638, 0.48237028182353936, 0.7679315484969023,
		0.8346460444000079, 0.6845132697132346, 0.7380395612394075,
		0.8473211876559764, 0.5398455256014386, 0.6492258241137107,
		0.9493113326535019, 0.4693823235198408, 0.7588631465188447,
		0.8221563411179839, 0.7326608359031864, 0.7707337310730018,
		0.9146931799746609, 0.6161912106402534, 0.7005905533731512,
		0.8692028827518338, 0.7321985017830819, 0.7798164213288011,
		0.9653193547908855, 0.6483862148361005, 0.7698216161117324,
		0.9497339217207597, 0.7376242272768772, 0.637387028878644,
		0.822239149030362, 0.7388775858306355, 0.8801724812899077,
		0.8323609599174814, 0.7150353074752375, 0.7564987025914103,
		0.8603620495097279, 0.6502168784838953, 0.7116745941038272,
		0.8047221067986396, 0.589009707010711, 0.7670782499453539,
		0.8917161587135154, 0.6057612295772259, 0.7841056640591183,
		0.859437379068209, 0.6810368103600446, 0.8851949003606133,
		0.9180120391566762, 0.6133304933066646, 0.8956343306689392,
		0.9680153051877448, 0.45230388996914084, 0.7890502556895882,
		0.9161282172321025, 0.4260609482922088, 0.8074549521524497,
		0.8352708469378168, 0.5785239427568165, 0.8284697633334485,
		0.8853876403461153, 0.5667984270846766, 0.6605429088417057,
		0.830097817121183, 0.714725929847193, 0.6038749822536583,
		0.9587169170154443, 0.597310162612356, 0.6760902962252306,
		0.9167765538795971, 0.5018811364913569, 0.6773935840969834,
		0.8168270361509905, 0.5974596334141, 0.7722174659711941,
		0.9410563882569785, 0.494517928033947, 0.8556483758150224,
		0.9663600461309257, 0.6874843288854331, 0.6948850414441773,
		0.9258404599371727, 0.5340214052782262, 0.6225192194120549,
		0.8766839076174915, 0.4704351287074833, 0.8623857458026327,
		0.8957606132501466, 0.6175420273306884, 0.605209905216569,
		0.8633844973497384, 0.5676075918090097, 0.6426358933144474,
		0.869282791967739, 0.7588860526146175, 0.8790405148783366,
		0.8259675957387537, 0.5833168164259331, 0.6151969664105702,
		0.841347574882774, 0.47058762081975075, 0.6872463592553173,
		0.9476006067908797, 0.578342245316177, 0.8349485798047168,
		0.9566243581562588, 0.5041733195230496, 0.6084860460111693,
		0.9887616661703253, 0.63109962961188, 0.633522064905629,
		0.9746984991966863, 0.5331083686163102, 0.7969846871609279,
		0.8845898914192485, 0.5801207079832573, 0.8030711370290855,
		0.9001148359225818, 0.6081654935920763, 0.60346495708955,
		0.8657033126075675, 0.41445241168085856, 0.8015427548793704,
		0.9297678131166159, 0.5294557557057165, 0.8389218579822642,
		0.8499304039714597, 0.6772259395352795, 0.773688369902454,
		0.9357410658345255, 0.6388000335025843, 0.8421653291303908,
		0.9525349924847566, 0.7621452659891802, 0.8519775927890453,
		0.8137449325467764, 0.7207250302633184, 0.6076718327750149,
		0.8554466482931543, 0.728913257541799, 0.7387556831894686,
		0.9105443325537466, 0.7143139459342531, 0.6782180202309938,
		0.8327223777966871, 0.6243232207248084, 0.6420769539515049,
		0.8724336408479817, 0.7050309184332461, 0.6639044413787035,
		0.9523828890161588, 0.5952570238530802, 0.8915197363623433,
		0.9072268252158442, 0.5738127810115952, 0.8035552665081476,
		0.9651055850117051, 0.5627391199850177, 0.7664186445268849,
		0.895510199840582, 0.511565551228012, 0.6648473952767456,
		0.801329635151083, 0.5574802691954295, 0.6577063544020458,
		0.8771320540170964, 0.6775958453089661, 0.671265760197068,
		0.9332045667273876, 0.4737102261445024, 0.7347417057585603,
		0.8392922639920098, 0.6235585030371227, 0.7399516506843142,
		0.9392568178935489, 0.6079256258057181, 0.701141655592191,
		0.9025082792564967, 0.6784256636551986, 0.8325902650027787,
		0.986818740519741, 0.47835567442186205, 0.7732527828368398,
		0.8599953535988558, 0.7186308327077958, 0.7995790424510905,
		0.9590838905898116, 0.613169757723117, 0.7598862859636126,
		0.8138836651554483, 0.6410428963332335, 0.7945593960382533,
		0.8397121573145031, 0.5425558260809934, 0.8995697680687293,
		0.8697372968083938, 0.7917068023240375, 0.8946235887478731,
		0.9564028008352903, 0.4228215004173126, 0.7349187493443811,
		0.9431907722738303, 0.6715901197430437, 0.6698568556311973,
		0.9577986662413163, 0.4840735079973779, 0.6698822836857876,
		0.9928605000878118, 0.5321349642463938, 0.8855829278710953,
		0.943000796968996, 0.4815745459785454, 0.7291871092931664,
		0.9700931846519357, 0.6949459306106507, 0.7701972622841282,
		0.9007542859314466, 0.6117799914969818, 0.6703045943883779,
		0.903570721446078, 0.7926762175725119, 0.6304258904751133,
		0.8181320520916161, 0.4841475264828305, 0.668719220461072,
		0.8610534662737402, 0.6924645099710791, 0.6894449886409906,
		0.8741660123687179, 0.5718916890837783, 0.6148639706571624,
		0.8722283543623959, 0.4251563188203988, 0.7063065793964156,
		0.8341861030980589, 0.43550704764884285, 0.7917506360223031,
		0.8511537104936577, 0.47251573507067235, 0.761053579006625,
		0.9651581775204086, 0.7610169444380063, 0.8105402394321541,
		0.8037325737278324, 0.7493105370479802, 0.6760238501831564,
		0.9978319765050894, 0.4217194284263562, 0.7251537572790726,
		0.8915311845089691, 0.7864614878969303, 0.805902631452744,
		0.8626004890311167, 0.638510721202459, 0.8598961087244243,
		0.9962438384840397, 0.7704919582476668, 0.7781880668006412,
		0.8879087900716235, 0.6337876537492804, 0.8345926463066884,
		0.841656483664565, 0.6484493059937796, 0.6607924963885916,
		0.9771296627433629, 0.6467554608220192, 0.659793636589538,
		0.9871962058518995, 0.5210127498807503, 0.6688215613527488,
		0.919805639288942, 0.4070868710658311, 0.6938319862576416,
		0.8101577732463454, 0.668258553184935, 0.6180949788456668,
		0.9983809403515865, 0.7217122932580962, 0.6851789449455091,
		0.9410632441464076, 0.60007456147042, 0.6097020291062494,
		0.8573344100082242, 0.44437732744791514, 0.6295383873178514,
		0.9169021091221374, 0.41712466209973353, 0.748093631615814,
		0.9805613258505745, 0.54655047501478, 0.6366525255886001,
		0.8998063019077843, 0.668865563648257, 0.693150091328639,
		0.8427222126080997, 0.7599535627706983, 0.7473585175566824,
		0.8741970491730622, 0.539999760939707, 0.7386793868632505,
		0.8673172426861926, 0.7543510292263014, 0.7356029111863425,
		0.9589024807654724, 0.45329048403642974, 0.6489229416775456,
		0.8183651994884161, 0.5716793514510187, 0.8792417618491972,
		0.901777190029818, 0.4539416606534459, 0.845126460118179,
		0.9735196957794722, 0.7058793654742643, 0.6369681686925627,
		0.8832962525318128, 0.7899676354066554, 0.7128965906458684,
		0.8731447908394308, 0.6386975354298294, 0.7591159117268562,
		0.9719993672003511, 0.5087184234677289, 0.8652073094612143,
		0.8639920925623565, 0.45256686072137486, 0.7375082122176195,
		0.9392487467240871, 0.6053632660934664, 0.7811866893551465,
		0.9624989100413668, 0.6499744286103841, 0.8009791700501452,
		0.8802253857533636, 0.7251802765747736, 0.8156695527826042,
		0.8261479814377292, 0.6480689501607382, 0.8442435270830382,
		0.9222045324767438, 0.7267149925903011, 0.8445947004637221,
		0.9760704102506849, 0.5794689004369495, 0.8132338656246062,
		0.9859452489816659, 0.5480966614517846, 0.6639866790632111,
		0.8289642920828387, 0.42575894622015803, 0.7122196404920482,
		0.8931133275414553, 0.6159218684078164, 0.7196221018928388,
		0.8300472411900791, 0.6623247970361952, 0.7525563565369895,
		0.9341120932560135, 0.6149913677805959, 0.6414253611594052,
		0.98720793973707, 0.6701388359406768, 0.8732032692147906,
		0.9797468284196225, 0.5792312136682275, 0.7264206154838555,
		0.9156928160475404, 0.7643158904264503, 0.6406802988000009,
		0.8950462573920257, 0.5637002458991718, 0.8267593260148018,
		0.9031434645224538, 0.6485366508423994, 0.6612978870651507,
		0.8791514317128419, 0.5562241291388619, 0.7569268248749675,
		0.9185171463667675, 0.538118859969401, 0.8764031659677762,
		0.8924154027979186, 0.6797029541227866, 0.756578717481857,
		0.9175036245877907, 0.574669738590936, 0.833068798332025,
		0.8080197815732694, 0.4026692387223588, 0.8706328712940108,
		0.8113685313950858, 0.6414964800171842, 0.7813840977079989,
		0.904039968487339, 0.6065934576227283, 0.7346835282784263,
		0.8467118322003473, 0.5757783207742302, 0.8481894411632849,
		0.9947446884990748, 0.43101360450288495, 0.6744660901969873,
		0.8390071000066249, 0.4872889888203117, 0.8977214755442653,
		0.9541581446563097, 0.4177129276851778, 0.661412845969904,
		0.8208010792527097, 0.7475017125783758, 0.8758026143069617,
		0.9410614228856461, 0.5462975366974892, 0.6664961852263014,
		0.9585255485605011, 0.582933413976052, 0.6103773865719959,
		0.9126566979508128, 0.769475021945446, 0.8880664833750065,
		0.8329182540393528, 0.6652509959110384, 0.788566422618295,
		0.8692058422282551, 0.7559003601525702, 0.873754749744171,
		0.9945633624804673, 0.775088496198075, 0.7668189893634121,
		0.8647617227868184, 0.6370025599368595, 0.8867205451115278,
		0.8641335054497233, 0.6334451940001515, 0.6262328411686684,
		0.8200811556128415, 0.4879450872858793, 0.8328750379120662,
		0.9763579428826036, 0.6446066671518853, 0.7328752011656627,
		0.8859655393167571, 0.7108226807787268, 0.7307176678690698,
		0.9225867077652362, 0.43829786281474004, 0.7878727595802666,
		0.9717486115634522, 0.47815041887399024, 0.6762566720177011,
		0.8113490601856815, 0.5205423287270909, 0.7012346343060184,
		0.8951668419599307, 0.46534842872693305, 0.879815735806587,
		0.8347918185932609, 0.6443052671546334, 0.6265212409606328,
		0.9711588676853636, 0.49682853071300026, 0.7548665186734962,
		0.9835423415564748, 0.5885233723613557, 0.7171721759476788,
		0.9649601490505915, 0.45328454836156096, 0.8068585349629254,
		0.9110203306567325, 0.6075332479890767, 0.7133449808879277,
		0.8800685421777212, 0.7573187075131813, 0.8297949418318991,
		0.9114911119636357, 0.6403295109792193, 0.6884116345903415,
		0.9935704492621176, 0.7968002570920155, 0.721609866201499,
		0.8383182236158866, 0.6429226942719579, 0.7251067344853552,
		0.8871340503005684, 0.6958520598360343, 0.7808002311433284,
		0.9683181563625571, 0.7706963319697557, 0.6204783124477935,
		0.9137998444807297, 0.6147579647656263, 0.6170678945743268,
		0.962262787470018, 0.7162958299281559, 0.8935831939676322,
		0.8632489084728141, 0.49831130219058595, 0.790561676543927,
		0.8088747841304278, 0.4897612058864497, 0.7315547515394534,
		0.855646874951234, 0.6466852478514802, 0.8052036838445924,
		0.9305188401376383, 0.5514269087379053, 0.8057073042382249,
		0.9552696076617202, 0.7953306097898225, 0.7160127201922084,
		0.8326291086185408, 0.6697472244554847, 0.7883658695360292,
		0.8862775701559498, 0.46016633643313565, 0.8605779640380137,
		0.9373435295968356, 0.486054700851982, 0.6728707887383754,
		0.8584485875790724, 0.5455948927012099, 0.602264454447661,
		0.8491742467142944, 0.7232572849444766, 0.692814127237375,
		0.974632212143476, 0.5629523318417067, 0.8473547087650884,
		0.9051354157435135, 0.5972527674365983, 0.6602541184643976,
		0.967428527201918, 0.7821106216677833, 0.7942257340503182,
		0.9182061935053721, 0.5334169905717178, 0.8085144765696213,
		0.9935430424147373, 0.799460502610108, 0.8503004880663085,
		0.9095155052951479, 0.5975961445950526, 0.6479557495508379,
		0.8363969103700962, 0.6604405196438916, 0.7569925730048197,
		0.9080397956260013, 0.6630833180476581, 0.7937900353322862,
		0.8543605594022249, 0.5775682151237929, 0.8350527499983298,
		0.8980873255218816, 0.4494536436911432, 0.7436104210405987,
		0.8318294932612464, 0.7522204035968084, 0.8982081711657455,
		0.9800079379646933, 0.559692065644909, 0.6484101581905048,
		0.8462635523874275, 0.7645181293572786, 0.8675029807462722,
		0.8057920874571274, 0.5503976814638623, 0.6343740140566166,
		0.8927416880112825, 0.5238252143535475, 0.859531588231899,
		0.9724376990999263, 0.5215381174218634, 0.8162905857038143,
		0.8053809460540025, 0.40566284916754647, 0.6664932400984529,
		0.9419650087587141, 0.5808647492138911, 0.7077437230351019,
		0.8244035771534118, 0.5432044543621494, 0.6501210387087768,
		0.8644358627799013, 0.48895158927574706, 0.7018994049906672,
		0.9562026577246602, 0.4193587955857006, 0.7530486886392136,
		0.9415519927664688, 0.7540103751087984, 0.6798894718714237,
		0.9731810568627779, 0.6014370038057956, 0.7843686774645087,
		0.8172255829876693, 0.5608809896852286, 0.7164849178876651,
		0.8442004728669341, 0.6503900944545024, 0.8553900350406549,
		0.947261210313928, 0.7809793625711845, 0.8804408844663707,
		0.8701946686083468, 0.772610759167706, 0.6095955356102751,
		0.8082864393825698, 0.47330581984832193, 0.707654911759249,
		0.93015550249979, 0.6386834552830085, 0.6653187623866256,
		0.9125316496724593, 0.5371302187445028, 0.6764336191035875,
		0.9210710432186381, 0.434578118319063, 0.6254442737346327,
		0.9921205352082092, 0.6096239999812001, 0.8226196481129069,
		0.8298196810448548, 0.7495881396873095, 0.6154247593311161,
		0.945845542722443, 0.4943643562007207, 0.6353715901202869,
		0.8893605432870898, 0.6996318625924114, 0.8961942166015047,
		0.803523288884867, 0.6354062269329038, 0.6805876850240966,
		0.8859034723539313, 0.6083623369549385, 0.6628647164958346,
		0.9210703508168703, 0.6278306690625695, 0.8611180033525574,
		0.8854665932494986, 0.5732117598848985, 0.7481410617928298,
		0.9094102325578666, 0.43886496360158733, 0.719755353295279,
		0.8333723034356977, 0.770134704734157, 0.6077172302776247,
		0.9663750734801828, 0.4351919638394727, 0.7397079913378115,
		0.8148477687649398, 0.7325085999867882, 0.7361650165120168,
		0.8872593207702356, 0.47829718601681304, 0.7693173153629786,
		0.9709568417044009, 0.7533889737489423, 0.7880511365514737,
		0.9003719282151071, 0.7047022065115344, 0.6990667583025325,
		0.92581482204598, 0.6711851530609121, 0.8227689396209592,
		0.8240524985941832, 0.6152051284653512, 0.7915951894885918,
		0.9233853625314495, 0.7626049388734522, 0.8118925849766894,
		0.9736420229891869, 0.6403911751792146, 0.7206042519630027,
		0.863242908287037, 0.7935045636794722, 0.7644051716533442,
		0.9729619941415778, 0.7609001970362015, 0.8159458672481845,
		0.8446601362949054, 0.7633241094155703, 0.6742521812984678,
		0.8518267852346164, 0.4566394733649886, 0.7575742471198693,
	};

	//老師說interleaved arrays會用就好，所以我只有logoG有用，並且只在MULTIDRAWELEMENTS區塊使用
	static GLfloat logoG_interleaved[] = {
				0,1,0,		778, 274,0,
				0,1,0,		791, 203,0,
				0,1,0,		878, 177,0,
				0,1,0,		850, 265,0,

				0,1,0,		788, 212,0,
				0,1,0,		767, 141,0,
				0,1,0,		843, 159,0,
				0,1,0,		882, 250,0,

				0,1,0,		841, 159,0,
				0,1,0,		917, 139,0,
				0,1,0,		891, 219,0,
				0,1,0,		819, 237,0,

				0,1,0,		895, 214,0,
				0,1,0,		906, 274,0,
				0,1,0,		846, 264,0,
				0,1,0,		806, 177,0
	};

	vertices[0] = logoG;
	vertices[1] = logoR;
	vertices[2] = logoW;
	vertices[3] = zhTitle;
	vertices[4] = enTitle;

	vertices2[0] = logoG_interleaved;


	colors[0] = logoG_color;
	colors[1] = logoR_color; //混色紅
	colors[2] = logoW_color;
	colors[3] = zhTitle_color; //混色藍
	colors[4] = enTitle_color; //混色粉

}

void init() {
	glClearColor(0.0, 0.0, 0.0, 0.0);
	//glShadeModel(GL_FLAT); //默認為GL_SMOOTH(自行計算過度色)，GL_FLAT不會有過度色(混色)
	glEnableClientState(GL_VERTEX_ARRAY); //要記得enable才能使用array
	glEnableClientState(GL_COLOR_ARRAY); //要記得enable才能使用array
	glEnable(GL_CULL_FACE); //all the faces that are not front-faces are discarded -> 確認都為正面
	setupVertexAndColor(); //設定全域陣列，供所有函數使用
	glutIdleFunc(solarDisplay);
}

void reshape(int w, int h)
{
	glViewport(0, 0, (GLsizei)w, (GLsizei)h);
	glMatrixMode(GL_PROJECTION);
	glLoadIdentity();
	if (w <= h)
		glOrtho(-1.0, 1.0, -1.0 * (GLfloat)h / (GLfloat)w,
			1.0 * (GLfloat)h / (GLfloat)w, -5.0, 1.0);
	else
		glOrtho(-1.0 * (GLfloat)w / (GLfloat)h,
			1.0 * (GLfloat)w / (GLfloat)h, -1.0, 1.0, -5.0, 1.0);//2D
	glFrustum(-1.0, 1.0, -1.0, 1.0, 1.0, 50.0);//3D
	glMatrixMode(GL_MODELVIEW);
	glLoadIdentity();
}

void display()
{
	glClear(GL_COLOR_BUFFER_BIT | GL_DEPTH_BUFFER_BIT);
	glColor3f(1.0, 1.0, 1.0);
	
	glPushMatrix();

	gluLookAt(pos_x, 0.0, pos_z, pos_x, 0.0, pos_z - 1.0, 0.0, 1.0, 0.0);
	glutWireCube(1.0);

	//開始畫機械手臂
	glPushMatrix();
		glTranslated(pos_x + arm_x, arm_y, pos_z - arm_z);

		glTranslatef(-1.0, 0.0, 0.0);
		glRotatef((GLfloat)shoulderz, 0.0, 0.0, 1.0);//旋轉
		glRotatef((GLfloat)shouldery, 0.0, 1.0, 0.0);//旋轉
		glTranslatef(1.0, 0.0, 0.0);
		glPushMatrix();
		glScalef(2, 1.0, 1.0); //x放大兩倍
		glColor3f(0.0, 1.0, 0.0);
		glutSolidCube(1.0);
		glColor3f(1.0, 0.0, 0.0);
		glutWireCube(1.0);
		glPopMatrix();//返回到已旋轉的矩陣

		glTranslatef(1.0, 0.0, 0.0);//旋轉完再右移1
		glRotatef((GLfloat)elbowz, 0.0, 0.0, 1.0);//旋轉
		glRotatef((GLfloat)elbowy, 0.0, 1.0, 0.0);//旋轉
		glTranslatef(1.0, 0.0, 0.0);//將方塊右移1(方塊左邊移到旋轉中心點)
		glPushMatrix();
		glScalef(2.0, 1.0, 1.0);
		glutWireCube(1.0);
		glPopMatrix();
		//目前是小臂方塊，開始畫第一根手指
		glPushMatrix();
		glTranslatef(1.0, 0.5, 0.3);
		glRotatef(45, 0.0, 0.0, 1.0);
		glTranslatef(0.5, 0.0, 0.0);

		glPushMatrix();
		glScalef(1.0, 0.3, 0.3);
		glutWireCube(1.0);
		glPopMatrix();

		glTranslatef(0.5, 0, 0);
		glRotatef(-45, 0.0, 0.0, 1.0);
		glTranslatef(0.5, 0.0, 0.0);

		glPushMatrix();
		glScalef(1.0, 0.3, 0.3);
		glutWireCube(1.0);
		glPopMatrix();

		glPopMatrix();
		//目前是小臂方塊，開始畫第二根手指
		glPushMatrix();
		glTranslatef(1.0, 0.5, 0.0);
		glRotatef(45, 0.0, 0.0, 1.0);
		glTranslatef(0.5, 0.0, 0.0);

		glPushMatrix();
		glScalef(1.0, 0.3, 0.3);
		glutWireCube(1.0);
		glPopMatrix();

		glTranslatef(0.5, 0, 0);
		glRotatef(-45, 0.0, 0.0, 1.0);
		glTranslatef(0.5, 0.0, 0.0);

		glPushMatrix();
		glScalef(1.0, 0.3, 0.3);
		glutWireCube(1.0);
		glPopMatrix();

		glPopMatrix();
		//目前是小臂方塊，開始畫第三根手指
		glPushMatrix();
		glTranslatef(1.0, 0.5, -0.3);
		glRotatef(45, 0.0, 0.0, 1.0);
		glTranslatef(0.5, 0.0, 0.0);

		glPushMatrix();
		glScalef(1.0, 0.3, 0.3);
		glutWireCube(1.0);
		glPopMatrix();

		glTranslatef(0.5, 0, 0);
		glRotatef(-45, 0.0, 0.0, 1.0);
		glTranslatef(0.5, 0.0, 0.0);

		glPushMatrix();
		glScalef(1.0, 0.3, 0.3);
		glutWireCube(1.0);
		glPopMatrix();

		glPopMatrix();
		//目前是小臂方塊，開始畫第四根手指
		glPushMatrix();
		glTranslatef(1.0, -0.5, 0);
		glRotatef(-45, 0.0, 0.0, 1.0);
		glTranslatef(0.5, 0.0, 0.0);

		glPushMatrix();
		glScalef(1.0, 0.3, 0.3);
		glutWireCube(1.0);
		glPopMatrix();

		glTranslatef(0.5, 0, 0);
		glRotatef(45, 0.0, 0.0, 1.0);
		glTranslatef(0.5, 0.0, 0.0);

		glPushMatrix();
		glScalef(1.0, 0.3, 0.3);
		glutWireCube(1.0);
		glPopMatrix();

		glPopMatrix();
		//太陽系
		glTranslatef(4, 0.0, 0.0);
		glColor3f(1.0, 1.0, 1.0);
		glutWireSphere(1.0, 20, 16);   /* draw sun */
		glRotatef((GLfloat)year, 0.0, 1.0, 0.0);
		glTranslatef(2, 0.0, 0.0);
		glRotatef((GLfloat)day, 0.0, 1.0, 0.0);
		glutWireSphere(0.2, 10, 8);    /* draw smaller planet */

	glPopMatrix();

	

	//glTranslatef(477.5, 161, 0); //移動base座標，將原點移到中心點
	glRotatef(spin, x, y, z); //旋轉
	glScalef(0.1,0.1,1);
	glTranslatef(-477.5, -161, 0);

	
	glRectf(475, 158, 480, 164); //中心點
	if (derefMethod == DRAWARRAYS) {
		//logo
		glVertexPointer(2, GL_INT, 0, vertices[0]);
		glColorPointer(3, GL_FLOAT, 0, colors[0]);
		glDrawArrays(GL_POLYGON, 0, 4);
		glDrawArrays(GL_POLYGON, 4, 4);
		glDrawArrays(GL_POLYGON, 8, 4);
		glDrawArrays(GL_POLYGON, 12, 4);

		glVertexPointer(2, GL_INT, 0, vertices[1]);
		glColorPointer(3, GL_FLOAT, 0, colors[1]);
		glDrawArrays(GL_POLYGON, 0, 4);
		glDrawArrays(GL_POLYGON, 4, 3);
		glDrawArrays(GL_POLYGON, 7, 3);
		glDrawArrays(GL_POLYGON, 10, 3);
		glDrawArrays(GL_POLYGON, 13, 3);

		glVertexPointer(2, GL_INT, 0, vertices[2]);
		glColorPointer(3, GL_FLOAT, 0, colors[2]);
		glDrawArrays(GL_POLYGON, 0, 4);
		glDrawArrays(GL_POLYGON, 4, 4);
		glDrawArrays(GL_POLYGON, 8, 4);
		glDrawArrays(GL_POLYGON, 12, 4);
		glDrawArrays(GL_POLYGON, 16, 4);
		glDrawArrays(GL_POLYGON, 20, 4);
		glDrawArrays(GL_POLYGON, 24, 4);
		glDrawArrays(GL_POLYGON, 28, 3);
		glDrawArrays(GL_POLYGON, 31, 3);

		//zh title
		glVertexPointer(2, GL_INT, 0, vertices[3]);
		glColorPointer(3, GL_FLOAT, 0, colors[3]);
		glDrawArrays(GL_POLYGON, 0, 4);
		glDrawArrays(GL_POLYGON, 4, 4);
		glDrawArrays(GL_POLYGON, 8, 4);
		glDrawArrays(GL_POLYGON, 12, 4);
		glDrawArrays(GL_POLYGON, 16, 4);
		glDrawArrays(GL_POLYGON, 20, 4);
		glDrawArrays(GL_POLYGON, 24, 4);
		glDrawArrays(GL_POLYGON, 28, 4);
		glDrawArrays(GL_POLYGON, 32, 4);
		glDrawArrays(GL_POLYGON, 36, 4);
		glDrawArrays(GL_POLYGON, 40, 4);
		glDrawArrays(GL_POLYGON, 44, 4);
		glDrawArrays(GL_POLYGON, 48, 4);
		glDrawArrays(GL_POLYGON, 52, 4);
		glDrawArrays(GL_POLYGON, 56, 4);
		glDrawArrays(GL_POLYGON, 60, 4);
		glDrawArrays(GL_POLYGON, 64, 4);
		glDrawArrays(GL_POLYGON, 68, 4);
		glDrawArrays(GL_POLYGON, 72, 4);
		glDrawArrays(GL_POLYGON, 76, 4);
		glDrawArrays(GL_POLYGON, 80, 4);
		glDrawArrays(GL_POLYGON, 84, 4);
		glDrawArrays(GL_POLYGON, 88, 4);
		glDrawArrays(GL_POLYGON, 92, 4);
		glDrawArrays(GL_POLYGON, 96, 4);
		glDrawArrays(GL_POLYGON, 100, 4);
		glDrawArrays(GL_POLYGON, 104, 4);
		glDrawArrays(GL_POLYGON, 108, 4);
		glDrawArrays(GL_POLYGON, 112, 4);
		glDrawArrays(GL_POLYGON, 116, 4);
		glDrawArrays(GL_POLYGON, 120, 4);
		glDrawArrays(GL_POLYGON, 124, 4);
		glDrawArrays(GL_POLYGON, 128, 4);
		glDrawArrays(GL_POLYGON, 132, 4);
		glDrawArrays(GL_POLYGON, 136, 4);
		glDrawArrays(GL_POLYGON, 140, 4);
		glDrawArrays(GL_POLYGON, 144, 4);
		glDrawArrays(GL_POLYGON, 148, 4);
		glDrawArrays(GL_POLYGON, 152, 4);
		glDrawArrays(GL_POLYGON, 156, 4);
		glDrawArrays(GL_POLYGON, 160, 4);
		glDrawArrays(GL_POLYGON, 164, 4);
		glDrawArrays(GL_POLYGON, 168, 4);
		glDrawArrays(GL_POLYGON, 172, 4);
		glDrawArrays(GL_POLYGON, 176, 4);
		glDrawArrays(GL_POLYGON, 180, 4);
		glDrawArrays(GL_POLYGON, 184, 4);
		glDrawArrays(GL_POLYGON, 188, 4);
		glDrawArrays(GL_POLYGON, 192, 4);
		glDrawArrays(GL_POLYGON, 196, 4);
		glDrawArrays(GL_POLYGON, 200, 4);
		glDrawArrays(GL_POLYGON, 204, 4);
		glDrawArrays(GL_POLYGON, 208, 4);
		glDrawArrays(GL_POLYGON, 212, 4);
		glDrawArrays(GL_POLYGON, 216, 4);
		glDrawArrays(GL_POLYGON, 220, 4);
		glDrawArrays(GL_POLYGON, 224, 4);
		glDrawArrays(GL_POLYGON, 228, 4);
		glDrawArrays(GL_POLYGON, 232, 4);
		glDrawArrays(GL_POLYGON, 236, 4);
		glDrawArrays(GL_POLYGON, 240, 4);
		glDrawArrays(GL_POLYGON, 244, 4);
		glDrawArrays(GL_POLYGON, 248, 4);
		glDrawArrays(GL_POLYGON, 252, 4);
		glDrawArrays(GL_POLYGON, 256, 4);


		//en title
		glVertexPointer(2, GL_INT, 0, vertices[4]);
		glColorPointer(3, GL_FLOAT, 0, colors[4]);
		glDrawArrays(GL_TRIANGLES, 0, 291);

	}
	//else if (derefMethod == DRAWELEMENTS) {
	//	glColor3f(1.0, 0.0, 0.0);
	//	glRectf(10, 10, 945, 25.0);

	//	//logo
	//	glColorPointer(3, GL_FLOAT, 0, colors[3]);
	//	glVertexPointer(2, GL_INT, 0, vertices[0]);
	//	GLuint indices[16] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }; //注意要使用unsign
	//	glDrawElements(GL_QUADS, 16, GL_UNSIGNED_INT, indices); //使用DrawElements

	//	glColorPointer(3, GL_FLOAT, 0, colors[1]);
	//	glVertexPointer(2, GL_INT, 0, vertices[1]);
	//	glBegin(GL_POLYGON); //使用ArrayElement
	//	glArrayElement(0);
	//	glArrayElement(1);
	//	glArrayElement(2);
	//	glArrayElement(3);
	//	glEnd();
	//	GLuint indices2[12] = { 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15 }; //注意要使用unsign
	//	glDrawElements(GL_TRIANGLES, 12, GL_UNSIGNED_INT, indices2); //使用DrawElements

	//	glColorPointer(3, GL_FLOAT, 0, colors[2]);
	//	glVertexPointer(2, GL_INT, 0, vertices[2]);
	//	GLuint indices3[32] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31 }; //注意要使用unsign
	//	glDrawElements(GL_QUADS, 32, GL_UNSIGNED_INT, indices3); //使用DrawElements

	//	//zh title
	//	glColorPointer(3, GL_FLOAT, 0, colors[3]);
	//	glVertexPointer(2, GL_INT, 0, vertices[3]);
	//	GLuint indices4[260] = {
	//		0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259
	//	}; //注意要使用unsign
	//	glDrawElements(GL_QUADS, 260, GL_UNSIGNED_INT, indices4); //使用DrawElements

	//	//en title
	//	glColorPointer(3, GL_FLOAT, 0, colors[3]);
	//	glVertexPointer(2, GL_INT, 0, vertices[4]);
	//	GLuint indices5[291] = {
	//		0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290
	//	}; //注意要使用unsign
	//	glDrawElements(GL_TRIANGLES, 291, GL_UNSIGNED_INT, indices5); //使用DrawElements

	//}
	//else if (derefMethod == MULTIDRAWARRAYS) {
	//	glColor3f(0.0, 1.0, 0.0);
	//	glRectf(10, 10, 945, 25.0);

	//	//logo
	//	glColorPointer(3, GL_FLOAT, 0, colors[4]);
	//	glVertexPointer(2, GL_INT, 0, vertices[0]);
	//	static GLint logo_first_g[] = { 0, 4, 8, 12 };
	//	static GLint logo_count_g[] = { 4, 4, 4, 4 };
	//	glMultiDrawArrays(GL_POLYGON, logo_first_g, logo_count_g, 4);

	//	glColorPointer(3, GL_FLOAT, 0, colors[1]);
	//	glVertexPointer(2, GL_INT, 0, vertices[1]);
	//	static GLint logo_first_r[] = { 0, 4, 7, 10, 13 };
	//	static GLint logo_count_r[] = { 4, 3, 3, 3, 3 };
	//	glMultiDrawArrays(GL_POLYGON, logo_first_r, logo_count_r, 5);

	//	glColorPointer(3, GL_FLOAT, 0, colors[2]);
	//	glVertexPointer(2, GL_INT, 0, vertices[2]);
	//	static GLint logo_first_w[] = { 0, 4, 8, 12, 16, 20, 24, 28, 31 };
	//	static GLint logo_count_w[] = { 4, 4, 4, 4, 4, 4, 4, 3, 3 };
	//	glMultiDrawArrays(GL_POLYGON, logo_first_w, logo_count_w, 9);

	//	//zh title
	//	glColorPointer(3, GL_FLOAT, 0, colors[4]);
	//	glVertexPointer(2, GL_INT, 0, vertices[3]);
	//	static GLint zh_title_first[] = {
	//	0, 4, 8, 12, 16, 20, 24, 28, 32, 36, 40, 44, 48, 52, 56, 60, 64, 68, 72, 76, 80, 84, 88, 92, 96, 100, 104, 108, 112, 116, 120, 124, 128, 132, 136, 140, 144, 148, 152, 156, 160, 164, 168, 172, 176, 180, 184, 188, 192, 196, 200, 204, 208, 212, 216, 220, 224, 228, 232, 236, 240, 244, 248, 252, 256
	//	};
	//	static GLint zh_title_count[] = {
	//		4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4
	//	};
	//	glMultiDrawArrays(GL_POLYGON, zh_title_first, zh_title_count, 65);

	//	//en title
	//	glColorPointer(3, GL_FLOAT, 0, colors[4]);
	//	glVertexPointer(2, GL_INT, 0, vertices[4]);
	//	static GLint en_title_first[] = { 0 };
	//	static GLint en_title_count[] = { 291 };
	//	glMultiDrawArrays(GL_TRIANGLES, en_title_first, en_title_count, 1);

	//}
	//else if (derefMethod == MULTIDRAWELEMENTS) {
	//	glColor3f(0.0, 0.0, 1.0);
	//	glRectf(10, 10, 945, 25.0);

	//	//logo
	//	glInterleavedArrays(GL_C3F_V3F, 0, vertices2[0]);
	//	static GLint logo_count_g[] = { 4, 4, 4, 4 };
	//	static GLint logo_g[][4] = {
	//		{0, 1, 2, 3},
	//		{4, 5, 6, 7},
	//		{8, 9, 10, 11},
	//		{12, 13, 14, 15},
	//	};
	//	static GLvoid* logo_g_indices[] = { logo_g[0], logo_g[1], logo_g[2], logo_g[3] };
	//	glMultiDrawElements(GL_QUADS, logo_count_g, GL_UNSIGNED_INT, logo_g_indices, 4);

	//	glColorPointer(3, GL_FLOAT, 0, colors[1]);
	//	glVertexPointer(2, GL_INT, 0, vertices[1]);
	//	static GLint logo_count_r[] = { 4, 3, 3, 3, 3 };
	//	static GLint logo_r[][4] = {
	//		{0, 1, 2, 3},
	//		{4, 5, 6},
	//		{7, 8, 9},
	//		{10, 11, 12},
	//		{13, 14, 15}
	//	};
	//	static GLvoid* logo_r_indices[] = { logo_r[0], logo_r[1], logo_r[2], logo_r[3], logo_r[4] };
	//	glMultiDrawElements(GL_POLYGON, logo_count_r, GL_UNSIGNED_INT, logo_r_indices, 5);

	//	glColorPointer(3, GL_FLOAT, 0, colors[2]);
	//	glVertexPointer(2, GL_INT, 0, vertices[2]);
	//	static GLint logo_count_w[] = { 4, 4, 4, 4, 4, 4, 4, 3, 3 };
	//	static GLint logo_w[][4] = {
	//		{0, 1, 2, 3},
	//		{4, 5, 6, 7},
	//		{8, 9, 10, 11},
	//		{12, 13, 14, 15},
	//		{16, 17, 18, 19},
	//		{20, 21, 22, 23},
	//		{24, 25, 26, 27},
	//		{28, 29, 30 },
	//		{31, 32, 33 }
	//	};
	//	static GLvoid* logo_w_indices[] = { logo_w[0], logo_w[1], logo_w[2], logo_w[3], logo_w[4], logo_w[5], logo_w[6], logo_w[7], logo_w[8] };
	//	glMultiDrawElements(GL_POLYGON, logo_count_w, GL_UNSIGNED_INT, logo_w_indices, 9);

	//	//zh title
	//	glColorPointer(3, GL_FLOAT, 0, colors[3]);
	//	glVertexPointer(2, GL_INT, 0, vertices[3]);
	//	static GLint zh_title_count[] = {
	//		4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4, 4
	//	};
	//	static GLuint zh_title[][4] = {
	//		{0, 1, 2, 3},
	//		{4, 5, 6, 7},
	//		{8, 9, 10, 11},
	//		{12, 13, 14, 15},
	//		{16, 17, 18, 19},
	//		{20, 21, 22, 23},
	//		{24, 25, 26, 27},
	//		{28, 29, 30, 31},
	//		{32, 33, 34, 35},
	//		{36, 37, 38, 39},
	//		{40, 41, 42, 43},
	//		{44, 45, 46, 47},
	//		{48, 49, 50, 51},
	//		{52, 53, 54, 55},
	//		{56, 57, 58, 59},
	//		{60, 61, 62, 63},
	//		{64, 65, 66, 67},
	//		{68, 69, 70, 71},
	//		{72, 73, 74, 75},
	//		{76, 77, 78, 79},
	//		{80, 81, 82, 83},
	//		{84, 85, 86, 87},
	//		{88, 89, 90, 91},
	//		{92, 93, 94, 95},
	//		{96, 97, 98, 99},
	//		{100, 101, 102, 103},
	//		{104, 105, 106, 107},
	//		{108, 109, 110, 111},
	//		{112, 113, 114, 115},
	//		{116, 117, 118, 119},
	//		{120, 121, 122, 123},
	//		{124, 125, 126, 127},
	//		{128, 129, 130, 131},
	//		{132, 133, 134, 135},
	//		{136, 137, 138, 139},
	//		{140, 141, 142, 143},
	//		{144, 145, 146, 147},
	//		{148, 149, 150, 151},
	//		{152, 153, 154, 155},
	//		{156, 157, 158, 159},
	//		{160, 161, 162, 163},
	//		{164, 165, 166, 167},
	//		{168, 169, 170, 171},
	//		{172, 173, 174, 175},
	//		{176, 177, 178, 179},
	//		{180, 181, 182, 183},
	//		{184, 185, 186, 187},
	//		{188, 189, 190, 191},
	//		{192, 193, 194, 195},
	//		{196, 197, 198, 199},
	//		{200, 201, 202, 203},
	//		{204, 205, 206, 207},
	//		{208, 209, 210, 211},
	//		{212, 213, 214, 215},
	//		{216, 217, 218, 219},
	//		{220, 221, 222, 223},
	//		{224, 225, 226, 227},
	//		{228, 229, 230, 231},
	//		{232, 233, 234, 235},
	//		{236, 237, 238, 239},
	//		{240, 241, 242, 243},
	//		{244, 245, 246, 247},
	//		{248, 249, 250, 251},
	//		{252, 253, 254, 255},
	//		{256, 257, 258, 259},
	//		{260, 261, 262, 263},
	//		{264, 265, 266, 267},
	//		{268, 269, 270, 271},
	//		{272, 273, 274, 275},
	//		{276, 277, 278, 279},
	//		{280, 281, 282, 283},
	//		{284, 285, 286, 287},
	//		{288, 289, 290, 291},
	//	};
	//	static GLvoid* zh_title_indices[] = { zh_title[0], zh_title[1], zh_title[2], zh_title[3], zh_title[4], zh_title[5], zh_title[6], zh_title[7], zh_title[8], zh_title[9], zh_title[10], zh_title[11], zh_title[12], zh_title[13], zh_title[14], zh_title[15], zh_title[16], zh_title[17], zh_title[18], zh_title[19], zh_title[20], zh_title[21], zh_title[22], zh_title[23], zh_title[24], zh_title[25], zh_title[26], zh_title[27], zh_title[28], zh_title[29], zh_title[30], zh_title[31], zh_title[32], zh_title[33], zh_title[34], zh_title[35], zh_title[36], zh_title[37], zh_title[38], zh_title[39], zh_title[40], zh_title[41], zh_title[42], zh_title[43], zh_title[44], zh_title[45], zh_title[46], zh_title[47], zh_title[48], zh_title[49], zh_title[50], zh_title[51], zh_title[52], zh_title[53], zh_title[54], zh_title[55], zh_title[56], zh_title[57], zh_title[58], zh_title[59], zh_title[60], zh_title[61], zh_title[62], zh_title[63], zh_title[64] };
	//	glMultiDrawElements(GL_QUADS, zh_title_count, GL_UNSIGNED_INT, zh_title_indices, 65);

	//	//en title
	//	glColorPointer(3, GL_FLOAT, 0, colors[4]);
	//	glVertexPointer(2, GL_INT, 0, vertices[4]);
	//	static GLint en_title_count[] = { 291 };
	//	static GLuint en_title[] = {
	//		0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290
	//	};
	//	static GLvoid* en_title_indices[] = { en_title };
	//	glMultiDrawElements(GL_TRIANGLES, en_title_count, GL_UNSIGNED_INT, en_title_indices, 1);
	//}

	glPopMatrix();


	glutSwapBuffers();
}

void spinDisplay(void)
{
	spin = spin + 0.5;
	if (spin > 360.0)
		spin = spin - 360.0;
	glutPostRedisplay();
}

void mouse(int button, int state, int mouse_x, int mouse_y)
{
	switch (button) {
	case GLUT_LEFT_BUTTON://z
		if (state == GLUT_DOWN) {
			if (spin == 0) {
				z = 1;
				y = 0;
				x = 0;
				glutIdleFunc(spinDisplay);
			}
			else {
				spin = 0;
				glutIdleFunc(NULL);
			}
		}
		break;
	case GLUT_MIDDLE_BUTTON://y
		if (state == GLUT_DOWN) {
			if (spin == 0) {
				z = 0;
				y = 1;
				x = 0;
				glutIdleFunc(spinDisplay);
			}
			else {
				spin = 0;
				glutIdleFunc(NULL);
			}
		}
		break;
	case GLUT_RIGHT_BUTTON: //x
		if (state == GLUT_DOWN) {
			if (spin == 0) {
				z = 0;
				y = 0;
				x = 1;
				glutIdleFunc(spinDisplay);
			}
			else {
				spin = 0;
				glutIdleFunc(NULL);
			}
		}
		break;
	default:
		break;
	}
}

void keyboard(unsigned char key, int x, int y)
{
	switch (key) {
	case 27: //esc
		exit(0);
		break;

	case 49: //1
		derefMethod = DRAWARRAYS;
		glutPostRedisplay(); //重要，這樣才能重新display
		break;

	case 50: //2
		derefMethod = DRAWELEMENTS;
		glutPostRedisplay();

		break;

	case 51: //3
		derefMethod = MULTIDRAWARRAYS;
		glutPostRedisplay();
		break;

	case 52: //4
		derefMethod = MULTIDRAWELEMENTS;
		glutPostRedisplay();
		break;

	//相機移動
	case 'w':
		//arm_z++;
		pos_z--;
		glutPostRedisplay();
		break;
	case 's':
		//arm_z--;
		pos_z++;
		glutPostRedisplay();
		break;
	case 'a':
		//arm_x--;
		pos_x--;
		glutPostRedisplay();
		break;
	case 'd':
		//arm_x++;
		pos_x++;
		glutPostRedisplay();
		break;

	//手臂角度
	case 'y':
		elbowy++;
		glutPostRedisplay();
		break;
	case 'h':
		elbowy--;
		glutPostRedisplay();
		break;

	case 'u':
		elbowz++;
		glutPostRedisplay();
		break;
	case 'j':
		elbowz--;
		glutPostRedisplay();
		break;

	case 'i':
		shouldery++;
		glutPostRedisplay();
		break;
	case 'k':
		shouldery--;
		glutPostRedisplay();
		break;

	case 'o':
		shoulderz++;
		glutPostRedisplay();
		break;
	case 'l':
		shoulderz--;
		glutPostRedisplay();
		break;
	}
	//printf("%f,%f,%f\n", arm_x, arm_y, arm_z);
	//printf("%d,%d,%d,%d\n", shoulderz, shouldery,elbowz, elbowy);

}


int main(int argc, char* argv[]) {

	glutInit(&argc, argv);
	glutInitDisplayMode(GLUT_DOUBLE | GLUT_RGBA | GLUT_DEPTH);
	glutInitWindowPosition(0, 0);
	glutInitWindowSize(955, 600);
	glutCreateWindow("nchu logo");

	init();

	// Bind the two functions (above) to respond when necessary
	glutReshapeFunc(reshape);
	glutDisplayFunc(display);
	glutMouseFunc(mouse);
	glutKeyboardFunc(keyboard);

	// Very important!  This initializes the entry points in the OpenGL driver so we can 
	// call all the functions in the API.
	GLenum err = glewInit();
	if (GLEW_OK != err) {
		fprintf(stderr, "GLEW error");
		return 1;
	}


	glutMainLoop();
	return 0;
}
